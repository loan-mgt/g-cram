version: '3.8'

services:
  backend:
    build:
      context: .
      dockerfile: back/Dockerfile
    container_name: api-g-cram
    ports:
      - "8090:8090"
    environment:
      - SERVER_PORT=8090
      - LOG_LEVEL=info
      - RABBITMQ_HOST=rabbit
      - RABBITMQ_PORT=5672
      - RABBITMQ_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_PASS=${RABBITMQ_DEFAULT_PASS}
    volumes:
      - ./media/in:/tmp/in
    depends_on:
      rabbitmq:
        condition: service_healthy
    restart: unless-stopped
    networks:
      default:
        aliases:
          - api
  compressor:
    build:
      context: .
      dockerfile: cramer/Dockerfile
    container_name: cramer-g-cram
    environment:
      - LOG_LEVEL=info
      - RABBITMQ_HOST=rabbit
      - RABBITMQ_PORT=5672
      - RABBITMQ_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_PASS=${RABBITMQ_DEFAULT_PASS}
    restart: unless-stopped
    volumes:
      - ./media/in:/tmp/in:ro
      - ./media/out:/tmp/out
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      default:
        aliases:
          - cramer
  uploader:
    build:
      context: .
      dockerfile: uploader/Dockerfile
    container_name: uploader-g-cram
    environment:
      - LOG_LEVEL=info
      - RABBITMQ_HOST=rabbit
      - RABBITMQ_PORT=5672
      - RABBITMQ_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_PASS=${RABBITMQ_DEFAULT_PASS}
    restart: unless-stopped
    volumes:
      - ./media/out:/tmp/out:ro
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      default:
        aliases:
          - uploader
  rabbitmq:
    image: rabbitmq:4.0.7-management
    container_name: rabbitmq-g-cram
    ports:
      - "5672:5672"  # AMQP port
      - "15672:15672"  # management UI port
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 10s
      timeout: 10s
      retries: 5
    networks:
      default:
        aliases:
          - rabbit
    restart: unless-stopped

  nginx:
    image: nginx:latest
    container_name: front-g-cram
    ports:
      - "8080:80"
    volumes:
      - ./front:/usr/share/nginx/html:ro             # Mount /front directory as web root
    restart: always
    configs:
      - source: nginx_config
        target: /etc/nginx/nginx.conf
    deploy:
      replicas: 1

configs:
  nginx_config:
    file: ./nginx.conf

